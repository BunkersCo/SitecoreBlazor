@using Foundation.BlazorExtensions.CustomBlazorRouter
@using Foundation.BlazorExtensions.Components
@using Foundation.BlazorExtensions.Services
@using Foundation.BlazorExtensions



@inject BlazorItemsService BlazorItemsService;



<ContextStateProvider>
    @*<Router AppAssembly=typeof(Components.Pages.RoutesClass).Assembly />*@
    @*Instead of using default router from Blazor we will have a customized version, which will allow us to add routes*@
    <TheRouter RouteValues="@_allRoutes">
        <NotFound>
            <p>Sorry, there's nothing at this address.</p>
        </NotFound>
        <Found Context="routeData">
            <TheRouteView RouteData="@routeData"  DefaultLayout="@typeof(Project.BlazorSite.Components.Shared.MasterBlaster)"></TheRouteView>
            @*<Project.BlazorSite.Components.Shared.MasterBlaster Language="en">

            </Project.BlazorSite.Components.Shared.MasterBlaster>*@
        </Found>
    </TheRouter>
</ContextStateProvider>



@code
{


    private RouterDataRoot _allRoutes = null;

    protected override void OnInitialized()
    {
        _allRoutes = BlazorItemsService.CreateRoutes();
    }



}


