@using System.Net.Http
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Layouts
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Services
@using Foundation.BlazorExtensions.Extensions
@using Foundation.BlazorExtensions.Services
@using Microsoft.JSInterop



@inherits Microsoft.AspNetCore.Components.Layouts.LayoutComponentBase



@inject IUriHelper _uriHelper;
@inject LayoutService _layoutService;
@inject LanguageService _languageService;
@inject IJSRuntime _jsRuntimeCurrent;



<div class="main">

    <BlazorPlaceholder Name="navbar">
        @Body
    </BlazorPlaceholder>

    <main role="main" class="container">
        <BlazorPlaceholder Name="main">
            @Body
        </BlazorPlaceholder>
    </main>


    <footer class="container">

        <BlazorPlaceholder Name="footer">
            @Body
        </BlazorPlaceholder>

    </footer>
</div>


@functions
{

    [Parameter]
    protected string Language { get; set; }


    protected override void OnInit()
    {
        _uriHelper.OnLocationChanged += OnLocationChanged;
        Reload();
    }

    private void OnLocationChanged(object sender, string location) => Reload();

    private async void Reload()
    {

        bool hasRouteError = Language.HasRouteError();

        if (hasRouteError)
            Language = _languageService.GetLanguageFromUrl(_uriHelper.GetBaseUri(), Language).TwoLetterCode;

        await _layoutService.LoadRoute(_jsRuntimeCurrent, Language, hasRouteError);


        StateHasChanged();
    }



    public void Dispose()
    {
        _uriHelper.OnLocationChanged -= OnLocationChanged;
    }

}

