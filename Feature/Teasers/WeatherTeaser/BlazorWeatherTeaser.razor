@using Foundation.BlazorExtensions.Extensions
@using Foundation.BlazorExtensions.Services
@using SitecoreBlazorHosted.Shared
@using System.Threading.Tasks
@using Foundation.BlazorExtensions.Components
@using Microsoft.AspNetCore.Components

@inherits BaseComponent

@inject NavigationManager NavigationManager;
@inject IRestService RestService
<div class="card">
    <div class="card-body">
        <h5 class="card-title">
            @FieldsModel.PlainText("WeatherTeaserHeader").Value.HtmlDecode()
        </h5>
        <h6 class="card-subtitle mb-2 text-muted">@FieldsModel.PlainText("WeatherTeaserText").Value.HtmlDecode()</h6>

        <p class="card-text">
            @if (_weatherForecasts == null)
            {
                <em>Loading...</em>
            }
        </p>

        @if (_weatherForecasts != null)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>@FieldsModel.PlainText("ColumnDate").Value</th>
                        <th>@FieldsModel.PlainText("ColumnTempC").Value</th>
                        <th>@FieldsModel.PlainText("ColumnTempF").Value</th>
                        <th>@FieldsModel.PlainText("ColumnSummary").Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in _weatherForecasts)
                    {
                        <tr>
                            <td>@forecast.Date.ToShortDateString()</td>
                            <td>@forecast.TemperatureC</td>
                            <td>@forecast.TemperatureF</td>
                            <td>@forecast.Summary</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>


@code{

    private WeatherForecast[] _weatherForecasts;

    protected override async Task OnParametersSetAsync()
    {

        _weatherForecasts = await RestService.ExecuteRestMethod<WeatherForecast[]>(FieldsModel.PlainText("RestUrl").Value.AddBaseUrl(NavigationManager));
    }


}
